version: 2.1

jobs:
  build:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          command: sudo apt-get update && sudo apt-get install build-essential gcc g++ cmake libcurl4-openssl-dev libssl-dev libopencryptoki-dev libjson-c-dev
      - restore_cache:
          key: aws-sdk-cpp-1.9.150
      - run:
          command: |
            if [[ ! -e ~/aws-sdk-cpp ]]; then
                curl -o ~/aws-sdk-cpp.tar.gz -L https://github.com/aws/aws-sdk-cpp/archive/1.9.150.tar.gz
                [[ "918nLtmn9yKGG11TcsGi0ws5ry8Jhw5H18AZkNXqMJU=" == $(openssl dgst -sha256 -binary < ~/aws-sdk-cpp.tar.gz  | openssl enc -base64) ]] || exit 1
                mkdir ~/aws-sdk-cpp-src
                tar -C ~/aws-sdk-cpp-src --strip-components=1 -zxf ~/aws-sdk-cpp.tar.gz
                # Bugfix for https://github.com/aws/aws-sdk-cpp/issues/1769
                curl -o ~/aws-sdk-cpp-src/prefetch_crt_dependency.sh https://raw.githubusercontent.com/aws/aws-sdk-cpp/2f4f7647e5ca6bf1c04a3ed7d14bebb8ad37f687/prefetch_crt_dependency.sh
                [[ "GiRnJvH2KKlkbIX+jbdkAvv5sWADE+oBnad0rNPeqPw=" == $(openssl dgst -sha256 -binary < ~/aws-sdk-cpp-src/prefetch_crt_dependency.sh | openssl enc -base64) ]] || exit 1
                cd ~/aws-sdk-cpp-src && ./prefetch_crt_dependency.sh
                mkdir ~/aws-sdk-cpp-src/sdk_build
                cd ~/aws-sdk-cpp-src/sdk_build && cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_ONLY=kms -DENABLE_TESTING=OFF -DCMAKE_INSTALL_PREFIX=$HOME/aws-sdk-cpp -DBUILD_SHARED_LIBS=OFF && make && make install
            fi
      - save_cache:
          key: aws-sdk-cpp-1.9.150
          paths:
            - ~/aws-sdk-cpp
      - run:
          command: AWS_SDK_PATH=$HOME/aws-sdk-cpp make
      - run:
          command: mkdir artifacts && cp aws_kms_pkcs11.so artifacts/
      - store_artifacts:
          path: artifacts
      - persist_to_workspace:
          root: artifacts
          paths:
            - aws_kms_pkcs11.so

  publish-github-release:
    docker:
      - image: cibuilds/github:0.10
    steps:
      - attach_workspace:
          at: ./artifacts
      - run:
          name: "Publish Release on GitHub"
          command: |
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -delete ${CIRCLE_TAG} ./artifacts/

workflows:
  build:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - publish-github-release:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v\d+\.\d+\.\d+$/

